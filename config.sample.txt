# This is an example file with configuration options. You should make a copy of
# this file and name it config.txt and make changes to the copy as needed.

# Options can be changed here or in many cases on the command line when calling
# the tarsqy.py script. In those cases, you can overrule an option named OPTION,
# by using --OPTION on the command line. For example, to overrule source-format
# option you can use --source-format on the command line.


# LINK_MERGER is not included because it slows down so much on large documents.

pipeline = PREPROCESSOR,GUTIME,EVITA,SLINKET,S2T,BLINKER,CLASSIFIER


# Determines whether the tarsqi.py script uses files for IO or standard input
# and standard output, the latter is used when pipe is set to True.

pipe = False


# Location of perl. Change this into an absolute path if perl cannot be accesed
# by the system by simply using 'perl'

perl = perl


# Location of the IMS TreeTagger. The default is the directory where the example
# build script build/install-treetagger-osx.sh installs the TreeTagger.

treetagger = build/treetagger


# Location of Mallet, this should be the directory that contains the bin
# directory. The default is the directory where the example build script
# build/install-mallet-osx.sh installs Mallet.

mallet = build/mallet/mallet-2.0.8


# Other options used for the classifier, where ee-model and et-model should
# refer to a model in components/classifier/models.
# TODO: allow absolute paths

classifier = MaxEnt
ee-model = tb-vectors.ee.model
et-model = tb-vectors.et.model


# The source format of the document, which allows components to be sensitive to
# idiosyncratic properties of the text. By default, the value is set to text.

source-format = text


# Set log level to an integer from 0 to 4, the higher the level the more
# messages will be written to the log. The default prints info, errors and
# warnings, but no debugging statements. See utilities.logger for more
# details.

loglevel = 3


# Errors are trapped by default.

trap-errors = True


## User configuration settings.

# Arbitrary parameters can be added here and will then be accessible to
# user-specific code. These parameters cannot be overruled by command line
# options.

# Parameter used by example code that finds the DCT in a database (see
# MetadataParserDB in docmodel.metadata_parser).

dct-database = data/in/va/dct.sqlite
